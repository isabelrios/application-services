// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version in UNIFFI_SHARED_HEADER_V1
    #ifndef UNIFFI_SHARED_HEADER_V1
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V1
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V1
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version in all instance of UNIFFI_SHARED_HEADER_V1 in this file.                   ⚠️

typedef struct RustBuffer
{
    int32_t capacity;
    int32_t len;
    uint8_t *_Nullable data;
    // Ref https://github.com/mozilla/uniffi-rs/issues/334 for this weird "padding" field.
    int64_t padding;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
    // Ref https://github.com/mozilla/uniffi-rs/issues/334 for these weird "padding" fields.
    int64_t padding;
    int32_t padding2;
} ForeignBytes;

// Error definitions
// Each error has an error code enum, and a struct
typedef struct NativeRustError {
    int32_t code;
    char *_Nullable message;
} NativeRustError;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version in all instance of UNIFFI_SHARED_HEADER_V1 in this file.                   ⚠️
#endif // def UNIFFI_SHARED_H
  
void ffi_nimbus_34cc_NimbusClient_object_free(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
void*_Nonnull nimbus_34cc_NimbusClient_new(
      RustBuffer app_ctx,RustBuffer dbpath,RustBuffer remote_settings_config,RustBuffer available_randomization_units
    ,NativeRustError *_Nonnull out_err
    );
void nimbus_34cc_NimbusClient_initialize(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_get_experiment_branch(
      void*_Nonnull ptr,RustBuffer id
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_get_feature_config_variables(
      void*_Nonnull ptr,RustBuffer feature_id
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_get_experiment_branches(
      void*_Nonnull ptr,RustBuffer experiment_slug
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_get_active_experiments(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_get_available_experiments(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
int8_t nimbus_34cc_NimbusClient_get_global_user_participation(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_set_global_user_participation(
      void*_Nonnull ptr,int8_t opt_in
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_update_experiments(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
void nimbus_34cc_NimbusClient_fetch_experiments(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_apply_pending_experiments(
      void*_Nonnull ptr
    ,NativeRustError *_Nonnull out_err
    );
void nimbus_34cc_NimbusClient_set_experiments_locally(
      void*_Nonnull ptr,RustBuffer experiments_json
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_opt_in_with_branch(
      void*_Nonnull ptr,RustBuffer experiment_slug,RustBuffer branch
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_opt_out(
      void*_Nonnull ptr,RustBuffer experiment_slug
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer nimbus_34cc_NimbusClient_reset_telemetry_identifiers(
      void*_Nonnull ptr,RustBuffer new_randomization_units
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer ffi_nimbus_34cc_rustbuffer_alloc(
      int32_t size
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer ffi_nimbus_34cc_rustbuffer_from_bytes(
      ForeignBytes bytes
    ,NativeRustError *_Nonnull out_err
    );
void ffi_nimbus_34cc_rustbuffer_free(
      RustBuffer buf
    ,NativeRustError *_Nonnull out_err
    );
RustBuffer ffi_nimbus_34cc_rustbuffer_reserve(
      RustBuffer buf,int32_t additional
    ,NativeRustError *_Nonnull out_err
    );
void ffi_nimbus_34cc_string_free(
      const char*_Nonnull cstr
    ,NativeRustError *_Nonnull out_err
    );
